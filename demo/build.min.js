/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _NedGraph = __webpack_require__(1);
	
	var _NedGraph2 = _interopRequireDefault(_NedGraph);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var graph = new _NedGraph2.default("nedGraph");
	
	// Node 1
	var node = graph.addNode("Another One");
	node.addInput('Value1');
	node.addInput('Value2');
	node.addInput('Value3');
	
	// Node 2
	var node2 = graph.addNode('Node 2');
	node2.addInput('Text In');
	node2.addInput('Value 5');
	
	// Node 3
	var node3 = graph.addNode('Something Else');
	node3.addInput('Color4');
	node3.addInput('Position');
	node3.addInput('Noise Octaves');
	
	node.moveTo({ x: 150, y: 20 });
	node2.moveTo({ x: 20, y: 70 });
	node3.moveTo({ x: 300, y: 150 });
	
	// Connect Nodes
	node.connectTo(node2.inputs[0]);
	node3.connectTo(node2.inputs[1]);
	node3.connectTo(node.inputs[0]);
	
	// Add to DOM
	node.initUI();
	node2.initUI();
	node3.initUI();

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _Mouse = __webpack_require__(2);
	
	var _Mouse2 = _interopRequireDefault(_Mouse);
	
	var _Node = __webpack_require__(3);
	
	var _Node2 = _interopRequireDefault(_Node);
	
	var _NodeInput = __webpack_require__(4);
	
	var _NodeInput2 = _interopRequireDefault(_NodeInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var NedGraph = function () {
	  function NedGraph(id) {
	    _classCallCheck(this, NedGraph);
	
	    // SVG Setup
	    this.svg = document.getElementById(id);
	    this.svg.ns = this.svg.namespaceURI;
	
	    this.mouse = new _Mouse2.default();
	
	    this.nodes = {};
	    this.nodeInputs = {};
	  }
	
	  _createClass(NedGraph, [{
	    key: "addNode",
	    value: function addNode(name) {
	      var node = new _Node2.default(name);
	      node._nedGraph = this;
	      this.nodes[name] = node;
	
	      return node;
	    }
	  }, {
	    key: "addNodeInput",
	    value: function addNodeInput(name) {
	      var nodeInput = new _NodeInput2.default(name, this);
	      this.nodeInputs[name] = nodeInput;
	
	      return nodeInput;
	    }
	  }]);
	
	  return NedGraph;
	}();
	
	exports.default = NedGraph;

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Mouse = function () {
	  function Mouse() {
	    var _this = this;
	
	    _classCallCheck(this, Mouse);
	
	    this.currentInput = null;
	
	    window.onmousemove = function (e) {
	      _this.onMove(e);
	    };
	
	    window.onclick = function (e) {
	      _this.onClick(e);
	    };
	  }
	
	  _createClass(Mouse, [{
	    key: 'createPath',
	    value: function createPath(a, b) {
	      var diff = {
	        x: b.x - a.x,
	        y: b.y - a.y
	      };
	
	      var pathStr = 'M' + a.x + ',' + a.y + ' ';
	      pathStr += 'C';
	      pathStr += a.x + diff.x / 3 * 2 + ',' + a.y + ' ';
	      pathStr += a.x + diff.x / 3 + ',' + b.y + ' ';
	      pathStr += b.x + ',' + b.y;
	
	      return pathStr;
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e) {
	      if (this.currentInput) {
	        var p = this.currentInput.path;
	        var iP = this.currentInput.getAttachPoint();
	        var oP = { x: e.pageX, y: e.pageY };
	        var s = this.createPath(iP, oP);
	        p.setAttributeNS(null, 'd', s);
	      }
	    }
	  }, {
	    key: 'onClick',
	    value: function onClick(e) {
	      if (this.currentInput) {
	        this.currentInput.path.removeAttribute('d');
	        if (this.currentInput.node) {
	          this.currentInput.node.detachInput(this.currentInput);
	        }
	        this.currentInput = null;
	      }
	    }
	  }]);
	
	  return Mouse;
	}();
	
	exports.default = Mouse;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _BaseElement2 = __webpack_require__(5);
	
	var _BaseElement3 = _interopRequireDefault(_BaseElement2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Node = function (_BaseElement) {
	  _inherits(Node, _BaseElement);
	
	  function Node(name) {
	    _classCallCheck(this, Node);
	
	    // DOM Element creation
	    var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));
	
	    _this.domElement = document.createElement('div');
	    _this.domElement.classList.add('node');
	    _this.domElement.setAttribute('title', name);
	
	    // Create output visual
	    var outDom = document.createElement('span');
	    outDom.classList.add('output');
	    outDom.innerHTML = '&nbsp;';
	    _this.domElement.appendChild(outDom);
	
	    // Output Click handler
	    outDom.onclick = function (e) {
	      _this.onClick(e);
	    };
	
	    // Node Stuffs
	    _this.name = name;
	    _this.value = '';
	    _this.inputs = [];
	    _this.connected = false;
	
	    // SVG Connectors
	    _this.attachedPaths = [];
	    return _this;
	  }
	
	  _createClass(Node, [{
	    key: 'onClick',
	    value: function onClick(e) {
	      if (this._nedGraph.mouse.currentInput && !this.ownsInput(this._nedGraph.mouse.currentInput)) {
	        var tmp = this._nedGraph.mouse.currentInput;
	        this._nedGraph.mouse.currentInput = null;
	        this.connectTo(tmp);
	      }
	      e.stopPropagation();
	    }
	  }, {
	    key: 'getOutputPoint',
	    value: function getOutputPoint() {
	      var tmp = this.domElement.firstElementChild;
	      var offset = this.GetFullOffset(tmp);
	      return {
	        x: offset.left + tmp.offsetWidth / 2,
	        y: offset.top + tmp.offsetHeight / 2
	      };
	    }
	  }, {
	    key: 'addInput',
	    value: function addInput(name) {
	      var input = this._nedGraph.addNodeInput(name);
	      this.inputs.push(input);
	      this.domElement.appendChild(input.domElement);
	
	      return input;
	    }
	  }, {
	    key: 'detachInput',
	    value: function detachInput(input) {
	      var index = -1;
	      for (var i = 0; i < this.attachedPaths.length; i++) {
	        if (this.attachedPaths[i].input == input) index = i;
	      };
	
	      if (index >= 0) {
	        this.attachedPaths[index].path.removeAttribute('d');
	        this.attachedPaths[index].input.node = null;
	        this.attachedPaths.splice(index, 1);
	      }
	
	      if (this.attachedPaths.length <= 0) {
	        this.domElement.classList.remove('connected');
	      }
	    }
	  }, {
	    key: 'ownsInput',
	    value: function ownsInput(input) {
	      for (var i = 0; i < this.inputs.length; i++) {
	        if (this.inputs[i] == input) return true;
	      }
	      return false;
	    }
	  }, {
	    key: 'updatePosition',
	    value: function updatePosition() {
	      var outPoint = this.getOutputPoint();
	
	      var aPaths = this.attachedPaths;
	      for (var i = 0; i < aPaths.length; i++) {
	        var iPoint = aPaths[i].input.getAttachPoint();
	        var pathStr = this.createPath(iPoint, outPoint);
	        aPaths[i].path.setAttributeNS(null, 'd', pathStr);
	      }
	
	      for (var j = 0; j < this.inputs.length; j++) {
	        if (this.inputs[j].node != null) {
	          var iP = this.inputs[j].getAttachPoint();
	          var oP = this.inputs[j].node.getOutputPoint();
	
	          var pStr = this.createPath(iP, oP);
	          this.inputs[j].path.setAttributeNS(null, 'd', pStr);
	        }
	      }
	    }
	  }, {
	    key: 'createPath',
	    value: function createPath(a, b) {
	      var diff = {
	        x: b.x - a.x,
	        y: b.y - a.y
	      };
	
	      var pathStr = 'M' + a.x + ',' + a.y + ' ';
	      pathStr += 'C';
	      pathStr += a.x + diff.x / 3 * 2 + ',' + a.y + ' ';
	      pathStr += a.x + diff.x / 3 + ',' + b.y + ' ';
	      pathStr += b.x + ',' + b.y;
	
	      return pathStr;
	    }
	  }, {
	    key: 'connectTo',
	    value: function connectTo(input) {
	      input.node = this;
	      this.connected = true;
	      this.domElement.classList.add('connected');
	
	      input.domElement.classList.remove('empty');
	      input.domElement.classList.add('filled');
	
	      this.attachedPaths.push({
	        input: input,
	        path: input.path
	      });
	
	      var iPoint = input.getAttachPoint();
	      var oPoint = this.getOutputPoint();
	
	      var pathStr = this.createPath(iPoint, oPoint);
	
	      input.path.setAttributeNS(null, 'd', pathStr);
	    }
	  }, {
	    key: 'moveTo',
	    value: function moveTo(point) {
	      this.domElement.style.top = point.y + 'px';
	      this.domElement.style.left = point.x + 'px';
	      this.updatePosition();
	    }
	  }, {
	    key: 'initUI',
	    value: function initUI() {
	      var _this2 = this;
	
	      // Make draggable
	      $(this.domElement).draggable({
	        containment: 'window',
	        cancel: '.connection,.output',
	        drag: function drag(event, ui) {
	          _this2.updatePosition();
	        }
	      });
	      // Fix positioning
	      this.domElement.style.position = 'absolute';
	
	      document.body.appendChild(this.domElement);
	      // Update Visual
	      this.updatePosition();
	    }
	  }]);
	
	  return Node;
	}(_BaseElement3.default);
	
	exports.default = Node;

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _BaseElement2 = __webpack_require__(5);
	
	var _BaseElement3 = _interopRequireDefault(_BaseElement2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NodeInput = function (_BaseElement) {
	  _inherits(NodeInput, _BaseElement);
	
	  function NodeInput(name, nedGraph) {
	    _classCallCheck(this, NodeInput);
	
	    var _this = _possibleConstructorReturn(this, (NodeInput.__proto__ || Object.getPrototypeOf(NodeInput)).call(this));
	
	    _this.name = name;
	    _this.node = null;
	    _this._nedGraph = nedGraph;
	
	    // The dom element, here is where we could add
	    // different input types
	    _this.domElement = document.createElement('div');
	    _this.domElement.innerHTML = name;
	    _this.domElement.classList.add('connection');
	    _this.domElement.classList.add('empty');
	
	    // SVG Connector
	    _this.path = document.createElementNS(_this._nedGraph.svg.ns, 'path');
	    _this.path.setAttributeNS(null, 'stroke', '#8e8e8e');
	    _this.path.setAttributeNS(null, 'stroke-width', '2');
	    _this.path.setAttributeNS(null, 'fill', 'none');
	    _this._nedGraph.svg.appendChild(_this.path);
	
	    // DOM Event handlers
	    _this.domElement.onclick = function (e) {
	      _this.onClick(e);
	    };
	    return _this;
	  }
	
	  _createClass(NodeInput, [{
	    key: 'onClick',
	    value: function onClick(e) {
	      var mouse = this._nedGraph.mouse;
	      console.log(mouse);
	      if (mouse.currentInput) {
	        if (mouse.currentInput.path.hasAttribute('d')) {
	          mouse.currentInput.path.removeAttribute('d');
	        }
	        if (mouse.currentInput.node) {
	          mouse.currentInput.node.detachInput(mouse.currentInput);
	          mouse.currentInput.node = null;
	        }
	      }
	      mouse.currentInput = this;
	      if (this.node) {
	        this.node.detachInput(this);
	        this.domElement.classList.remove('filled');
	        this.domElement.classList.add('empty');
	      }
	      e.stopPropagation();
	    }
	  }, {
	    key: 'getAttachPoint',
	    value: function getAttachPoint() {
	      var offset = this.GetFullOffset(this.domElement);
	      return {
	        x: offset.left + this.domElement.offsetWidth - 2,
	        y: offset.top + this.domElement.offsetHeight / 2
	      };
	    }
	  }]);
	
	  return NodeInput;
	}(_BaseElement3.default);
	
	exports.default = NodeInput;

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BaseElement = function () {
	  function BaseElement() {
	    _classCallCheck(this, BaseElement);
	  }
	
	  _createClass(BaseElement, [{
	    key: "GetFullOffset",
	
	    // @todo create static utilities class to house this method
	    value: function GetFullOffset(element) {
	      if (!element) {
	        element = this.domElement;
	      }
	
	      var offset = {
	        top: element.offsetTop,
	        left: element.offsetLeft
	      };
	
	      if (element.offsetParent) {
	        var po = this.GetFullOffset(element.offsetParent);
	        offset.top += po.top;
	        offset.left += po.left;
	        return offset;
	      } else return offset;
	    }
	  }]);
	
	  return BaseElement;
	}();
	
	exports.default = BaseElement;

/***/ }
/******/ ]);
//# sourceMappingURL=build.min.js.map