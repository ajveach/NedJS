/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _Node = __webpack_require__(1);
	
	var _Node2 = _interopRequireDefault(_Node);
	
	var _ModelNode = __webpack_require__(7);
	
	var _ModelNode2 = _interopRequireDefault(_ModelNode);
	
	var _ControllerNode = __webpack_require__(8);
	
	var _ControllerNode2 = _interopRequireDefault(_ControllerNode);
	
	var _NedGraph = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	_NedGraph.nedGraph.title = "NedJS Demo";
	
	_NedGraph.nedGraph.addSupportedNodeType("Controller", _ControllerNode2.default);
	_NedGraph.nedGraph.addSupportedNodeType("Model", _ModelNode2.default);
	
	// Node 1
	// let node = new Node("Another One");
	// node.addInput('Value1');
	// node.addInput('Value2');
	// node.addInput('Value3');
	//
	// // Node 2
	// let node2 = new Node("Node 2");
	// node2.addInput('Text In');
	// node2.addInput('Value 5');
	//
	// // Node 3
	// let node3 = new Node('Something Else');
	// node3.addInput('Color4');
	// node3.addInput('Position');
	// node3.addInput('Noise Octaves');
	//
	// node.moveTo({x: 250, y: 160});
	// node2.moveTo({x: 400, y: 90});
	// node3.moveTo({x:500, y:240});
	//
	//
	// // Connect Nodes
	// node.connectTo(node2.inputs[0]);
	// node3.connectTo(node2.inputs[1]);
	// node3.connectTo(node.inputs[0]);
	//
	// // Add to DOM
	// node.initUI();
	// node2.initUI();
	// node3.initUI();

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _BaseElement2 = __webpack_require__(2);
	
	var _BaseElement3 = _interopRequireDefault(_BaseElement2);
	
	var _NedGraph = __webpack_require__(3);
	
	var _NodeInputGroup = __webpack_require__(6);
	
	var _NodeInputGroup2 = _interopRequireDefault(_NodeInputGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Node = function (_BaseElement) {
	  _inherits(Node, _BaseElement);
	
	  function Node(name) {
	    _classCallCheck(this, Node);
	
	    var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));
	
	    _this.domElements = {};
	
	    // DOM Element creation
	    _this.domElements.container = document.createElement('div');
	    _this.domElements.container.classList.add('node');
	    _this.domElements.container.setAttribute('title', name);
	
	    // Create name display
	    _this.domElements.name = document.createElement("input");
	    _this.domElements.name.classList.add("nodeName");
	    _this.domElements.name.setAttribute("type", "text");
	    _this.domElements.container.appendChild(_this.domElements.name);
	    _this.domElements.name.ondblclick = function (e) {
	      return _this.handleNameDblClick(e);
	    };
	    _this.domElements.name.onkeyup = function (e) {
	      return _this.handleNameKeyup(e);
	    };
	
	    // Create output visual
	    _this.domElements.output = document.createElement('span');
	    _this.domElements.output.classList.add('output');
	    _this.domElements.output.innerHTML = '&nbsp;';
	    _this.domElements.container.appendChild(_this.domElements.output);
	
	    // Create input group container element
	    _this.domElements.inputGroupContainer = document.createElement("div");
	    _this.domElements.inputGroupContainer.classList.add("nodeInputGroupContainer");
	    _this.domElements.container.appendChild(_this.domElements.inputGroupContainer);
	
	    // Output Click handler
	    _this.domElements.output.onclick = function (e) {
	      return _this.handleOutDomClick(e);
	    };
	
	    // Node Stuffs
	    _this.name = name;
	    _this.value = '';
	    _this.inputGroups = {};
	    _this.connected = false;
	
	    // SVG Connectors
	    _this.attachedPaths = [];
	
	    // Add to nedGraph
	    _this.index = _NedGraph.nedGraph.nodes.length;
	    _NedGraph.nedGraph.nodes.push(_this);
	
	    // Set class name as attribute
	    _this.domElements.container.setAttribute("data-nodeType", _this.constructor.name);
	    return _this;
	  }
	
	  _createClass(Node, [{
	    key: "handleNameDblClick",
	    value: function handleNameDblClick(e) {
	      e.stopPropagation();
	
	      this.domElements.name.focus();
	    }
	  }, {
	    key: "handleNameKeyup",
	    value: function handleNameKeyup(e) {
	      // Array of key codes that will trigger input submission
	      var submitKeys = [13];
	      // Array of key codes that will trigger input cancellation
	      var cancelKeys = [27];
	
	      if (submitKeys.indexOf(e.keyCode) >= 0) {
	        // Trigger name change
	        this.name = this.domElements.name.value;
	        this.domElements.name.blur();
	      } else if (cancelKeys.indexOf(e.keyCode) >= 0) {
	        this.domElements.name.blur();
	        this.domElements.name.value = this.name;
	      }
	    }
	  }, {
	    key: "handleOutDomClick",
	    value: function handleOutDomClick(e) {
	      if (_NedGraph.nedGraph.mouse.currentInput && !this.ownsInput(_NedGraph.nedGraph.mouse.currentInput)) {
	        var tmp = _NedGraph.nedGraph.mouse.currentInput;
	        _NedGraph.nedGraph.mouse.currentInput = null;
	        this.connectTo(tmp);
	      }
	      e.stopPropagation();
	    }
	  }, {
	    key: "getOutputPoint",
	    value: function getOutputPoint() {
	      var tmp = this.domElements.output;
	      var offset = this.GetFullOffset(tmp);
	      return {
	        x: offset.left + tmp.offsetWidth / 2,
	        y: offset.top + tmp.offsetHeight / 2
	      };
	    }
	  }, {
	    key: "detachInput",
	    value: function detachInput(input) {
	      var index = -1;
	      for (var i = 0; i < this.attachedPaths.length; i++) {
	        if (this.attachedPaths[i].input == input) index = i;
	      };
	
	      if (index >= 0) {
	        this.attachedPaths[index].path.removeAttribute('d');
	        this.attachedPaths[index].input.node = null;
	        this.attachedPaths.splice(index, 1);
	      }
	
	      if (this.attachedPaths.length <= 0) {
	        this.domElements.container.classList.remove('connected');
	      }
	    }
	  }, {
	    key: "ownsInput",
	    value: function ownsInput(input) {
	      for (var k in this.inputGroups) {
	        for (var i = 0; i < this.inputGroups[k].inputs.length; i++) {
	          if (this.inputGroups[k].inputs[i] == input) return true;
	        }
	      }
	      return false;
	    }
	  }, {
	    key: "updatePosition",
	    value: function updatePosition() {
	      var outPoint = this.getOutputPoint();
	
	      var aPaths = this.attachedPaths;
	      for (var i = 0; i < aPaths.length; i++) {
	        var iPoint = aPaths[i].input.getAttachPoint();
	        var pathStr = this.createPath(iPoint, outPoint);
	        aPaths[i].path.setAttributeNS(null, 'd', pathStr);
	      }
	
	      for (var k in this.inputGroups) {
	        for (var j = 0; j < this.inputGroups[k].inputs.length; j++) {
	          if (this.inputGroups[k].inputs[j].node != null) {
	            var iP = this.inputGroups[k].inputs[j].getAttachPoint();
	            var oP = this.inputGroups[k].inputs[j].node.getOutputPoint();
	
	            var pStr = this.createPath(iP, oP);
	            this.inputGroups[k].inputs[j].path.setAttributeNS(null, 'd', pStr);
	          }
	        }
	      }
	    }
	  }, {
	    key: "createPath",
	    value: function createPath(a, b) {
	      var diff = {
	        x: b.x - a.x,
	        y: b.y - a.y
	      };
	
	      var pathStr = 'M' + a.x + ',' + a.y + ' ';
	      pathStr += 'C';
	      pathStr += a.x + diff.x / 3 * 2 + ',' + a.y + ' ';
	      pathStr += a.x + diff.x / 3 + ',' + b.y + ' ';
	      pathStr += b.x + ',' + b.y;
	
	      return pathStr;
	    }
	  }, {
	    key: "connectTo",
	    value: function connectTo(input) {
	      input.node = this;
	      this.connected = true;
	      this.domElements.container.classList.add('connected');
	
	      input.domElement.classList.remove('empty');
	      input.domElement.classList.add('filled');
	
	      this.attachedPaths.push({
	        input: input,
	        path: input.path
	      });
	
	      var iPoint = input.getAttachPoint();
	      var oPoint = this.getOutputPoint();
	
	      var pathStr = this.createPath(iPoint, oPoint);
	
	      input.path.setAttributeNS(null, 'd', pathStr);
	    }
	  }, {
	    key: "moveTo",
	    value: function moveTo(point) {
	      this.domElements.container.style.top = point.y + 'px';
	      this.domElements.container.style.left = point.x + 'px';
	      this.updatePosition();
	    }
	  }, {
	    key: "initUI",
	    value: function initUI() {
	      var _this2 = this;
	
	      // Make draggable
	      $(this.domElements.container).draggable({
	        containment: 'window',
	        cancel: '.connection,.output',
	        drag: function drag(event, ui) {
	          _this2.updatePosition();
	        }
	      });
	      // Fix positioning
	      this.domElements.container.style.position = 'absolute';
	
	      document.body.appendChild(this.domElements.container);
	      // Update Visual
	      this.updatePosition();
	    }
	  }, {
	    key: "addInputGroup",
	    value: function addInputGroup(name) {
	      var group = new _NodeInputGroup2.default(this, name);
	      this.inputGroups[name] = group;
	    }
	  }, {
	    key: "name",
	    get: function get() {
	      return this._name;
	    },
	    set: function set(value) {
	      this._name = value;
	      this.domElements.name.setAttribute("value", this._name);
	    }
	  }]);
	
	  return Node;
	}(_BaseElement3.default);
	
	exports.default = Node;

/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BaseElement = function () {
	  function BaseElement() {
	    _classCallCheck(this, BaseElement);
	  }
	
	  _createClass(BaseElement, [{
	    key: "GetFullOffset",
	
	    // @todo create static utilities class to house this method
	    value: function GetFullOffset(element) {
	      if (!element) {
	        element = this.domElement;
	      }
	
	      var offset = {
	        top: element.offsetTop,
	        left: element.offsetLeft
	      };
	
	      if (element.offsetParent) {
	        var po = this.GetFullOffset(element.offsetParent);
	        offset.top += po.top;
	        offset.left += po.left;
	        return offset;
	      } else return offset;
	    }
	  }]);
	
	  return BaseElement;
	}();
	
	exports.default = BaseElement;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.nedGraph = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _Mouse = __webpack_require__(4);
	
	var _Mouse2 = _interopRequireDefault(_Mouse);
	
	var _Node = __webpack_require__(1);
	
	var _Node2 = _interopRequireDefault(_Node);
	
	var _NodeInput = __webpack_require__(5);
	
	var _NodeInput2 = _interopRequireDefault(_NodeInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var NedGraph = function () {
	  function NedGraph() {
	    _classCallCheck(this, NedGraph);
	
	    // SVG Setup
	    this.svg = document.getElementById("nedGraph");
	    this.svg.ns = this.svg.namespaceURI;
	
	    this.mouse = new _Mouse2.default();
	
	    this.nodes = [];
	    this.nodeInputs = [];
	
	    this._title = null;
	    this._titleElement = null;
	
	    this._header = document.createElement("div");
	    this._header.id = "header";
	    document.body.appendChild(this._header);
	
	    this._supportedNodeTypes = {};
	    this._nodeListContainer = document.createElement("div");
	    this._nodeListContainer.classList.add("nodeListContainer");
	    this._header.appendChild(this._nodeListContainer);
	    this._addNodeElement = null;
	    this._nodeListElement = null;
	  }
	
	  _createClass(NedGraph, [{
	    key: "updateTitleElement",
	    value: function updateTitleElement() {
	      if (!this._titleElement) {
	        // Create DOM element
	        this._titleElement = document.createElement("div");
	        this._titleElement.classList.add("nedTitle");
	        this._titleElement.innerText = this._title;
	        this._header.appendChild(this._titleElement);
	      }
	    }
	  }, {
	    key: "addNode",
	    value: function addNode(name) {
	      var node = new _Node2.default(name);
	      node._nedGraph = this;
	      this.nodes[name] = node;
	
	      return node;
	    }
	  }, {
	    key: "addNodeInput",
	    value: function addNodeInput(name) {
	      var nodeInput = new _NodeInput2.default(name, this);
	      this.nodeInputs[name] = nodeInput;
	
	      return nodeInput;
	    }
	  }, {
	    key: "addSupportedNodeType",
	    value: function addSupportedNodeType(name, nodeType) {
	      this._supportedNodeTypes[name] = nodeType;
	      this.updateAddNodeUI();
	    }
	  }, {
	    key: "updateAddNodeUI",
	    value: function updateAddNodeUI() {
	      var _this = this;
	
	      // Setup add node button if it doesn't already exist
	      if (!this._addNodeElement) {
	        this._addNodeElement = document.createElement("div");
	        this._addNodeElement.innerText = "+";
	        this._addNodeElement.classList.add("addNode");
	        this._addNodeElement.title = "Add Node";
	        this._nodeListContainer.appendChild(this._addNodeElement);
	
	        this._addNodeElement.onclick = function (e) {
	          return _this.handleAddNodeListClick(e);
	        };
	      }
	
	      // Setup containing element for the list of supported node types if it doesn't exist
	      if (!this._nodeListElement) {
	        this._nodeListElement = document.createElement("div");
	        this._nodeListElement.classList.add("nodeList", "hide");
	        this._nodeListContainer.appendChild(this._nodeListElement);
	      }
	
	      // Empty list of supported node types
	      while (this._nodeListElement.firstChild) {
	        this._nodeListElement.removeChild(this._nodeListElement.firstChild);
	      }
	
	      for (var i in this._supportedNodeTypes) {
	        var element = document.createElement("div");
	        element.classList.add("nodeListItem");
	        element.setAttribute("data-type", i);
	        element.innerHTML = i;
	        element.onclick = function (e) {
	          return _this.handleAddNodeTypeClick(e);
	        };
	        this._nodeListElement.appendChild(element);
	      }
	    }
	  }, {
	    key: "handleAddNodeListClick",
	    value: function handleAddNodeListClick(e) {
	      e.preventDefault();
	      // If this._nodeListElement has the "hide" class then show the element
	      if (this._nodeListElement.classList.contains("hide")) {
	        this._nodeListElement.classList.remove("hide");
	      } else {
	        this._nodeListElement.classList.add("hide");
	      }
	    }
	  }, {
	    key: "handleAddNodeTypeClick",
	    value: function handleAddNodeTypeClick(e) {
	      e.preventDefault();
	
	      var nodeListItem = e.target;
	
	      var name = "New " + nodeListItem.dataset.type;
	      var newNode = new this._supportedNodeTypes[nodeListItem.dataset.type](name);
	      newNode.moveTo({ x: 100, y: 100 });
	      newNode.initUI();
	    }
	  }, {
	    key: "title",
	    get: function get() {
	      return this._title;
	    },
	    set: function set(value) {
	      this._title = value;
	      this.updateTitleElement();
	    }
	  }]);
	
	  return NedGraph;
	}();
	
	var nedGraph = exports.nedGraph = new NedGraph();

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Mouse = function () {
	  function Mouse() {
	    var _this = this;
	
	    _classCallCheck(this, Mouse);
	
	    this.currentInput = null;
	
	    window.onmousemove = function (e) {
	      _this.onMove(e);
	    };
	
	    window.onclick = function (e) {
	      _this.onClick(e);
	    };
	  }
	
	  _createClass(Mouse, [{
	    key: 'createPath',
	    value: function createPath(a, b) {
	      var diff = {
	        x: b.x - a.x,
	        y: b.y - a.y
	      };
	
	      var pathStr = 'M' + a.x + ',' + a.y + ' ';
	      pathStr += 'C';
	      pathStr += a.x + diff.x / 3 * 2 + ',' + a.y + ' ';
	      pathStr += a.x + diff.x / 3 + ',' + b.y + ' ';
	      pathStr += b.x + ',' + b.y;
	
	      return pathStr;
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e) {
	      if (this.currentInput) {
	        var p = this.currentInput.path;
	        var iP = this.currentInput.getAttachPoint();
	        var oP = { x: e.pageX, y: e.pageY };
	        var s = this.createPath(iP, oP);
	        p.setAttributeNS(null, 'd', s);
	      }
	    }
	  }, {
	    key: 'onClick',
	    value: function onClick(e) {
	      if (this.currentInput) {
	        this.currentInput.path.removeAttribute('d');
	        if (this.currentInput.node) {
	          this.currentInput.node.detachInput(this.currentInput);
	        }
	        this.currentInput = null;
	      }
	    }
	  }]);
	
	  return Mouse;
	}();
	
	exports.default = Mouse;

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _BaseElement2 = __webpack_require__(2);
	
	var _BaseElement3 = _interopRequireDefault(_BaseElement2);
	
	var _NedGraph = __webpack_require__(3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NodeInput = function (_BaseElement) {
	  _inherits(NodeInput, _BaseElement);
	
	  function NodeInput(name) {
	    _classCallCheck(this, NodeInput);
	
	    var _this = _possibleConstructorReturn(this, (NodeInput.__proto__ || Object.getPrototypeOf(NodeInput)).call(this));
	
	    _this.name = name;
	    _this.node = null;
	
	    // The dom element, here is where we could add
	    // different input types
	    _this.domElement = document.createElement('div');
	    _this.domElement.innerHTML = name;
	    _this.domElement.classList.add('connection');
	    _this.domElement.classList.add('empty');
	
	    // SVG Connector
	    _this.path = document.createElementNS(_NedGraph.nedGraph.svg.ns, 'path');
	    _this.path.setAttributeNS(null, 'stroke', '#8e8e8e');
	    _this.path.setAttributeNS(null, 'stroke-width', '2');
	    _this.path.setAttributeNS(null, 'fill', 'none');
	    _NedGraph.nedGraph.svg.appendChild(_this.path);
	
	    // DOM Event handlers
	    _this.domElement.onclick = function (e) {
	      _this.onClick(e);
	    };
	
	    // Add to nedGraph
	    _this.index = _NedGraph.nedGraph.nodeInputs.length;
	    _NedGraph.nedGraph.nodeInputs.push(_this);
	    return _this;
	  }
	
	  _createClass(NodeInput, [{
	    key: "onClick",
	    value: function onClick(e) {
	      var mouse = _NedGraph.nedGraph.mouse;
	
	      if (mouse.currentInput) {
	        if (mouse.currentInput.path.hasAttribute('d')) {
	          mouse.currentInput.path.removeAttribute('d');
	        }
	        if (mouse.currentInput.node) {
	          mouse.currentInput.node.detachInput(mouse.currentInput);
	          mouse.currentInput.node = null;
	        }
	      }
	      mouse.currentInput = this;
	      if (this.node) {
	        this.node.detachInput(this);
	        this.domElement.classList.remove('filled');
	        this.domElement.classList.add('empty');
	      }
	      e.stopPropagation();
	    }
	  }, {
	    key: "getAttachPoint",
	    value: function getAttachPoint() {
	      var offset = this.GetFullOffset(this.domElement);
	      return {
	        x: offset.left + this.domElement.offsetWidth - 2,
	        y: offset.top + this.domElement.offsetHeight / 2
	      };
	    }
	  }]);
	
	  return NodeInput;
	}(_BaseElement3.default);
	
	exports.default = NodeInput;

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _NodeInput = __webpack_require__(5);
	
	var _NodeInput2 = _interopRequireDefault(_NodeInput);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var NodeInputGroup = function () {
	  function NodeInputGroup(node, name) {
	    var _this = this;
	
	    _classCallCheck(this, NodeInputGroup);
	
	    this.inputs = [];
	
	    this.node = node;
	    this.domElements = {};
	
	    // Create container element
	    var containerElement = document.createElement("div");
	    containerElement.classList.add("nodeInputGroup");
	    this.node.domElements.inputGroupContainer.appendChild(containerElement);
	    this.domElements.container = containerElement;
	
	    // Create add input element
	    var addInputElement = document.createElement("div");
	    addInputElement.classList.add("addNodeInputButton");
	    addInputElement.onclick = function (e) {
	      return _this.handleAddInputButtonClick(e);
	    };
	    this.domElements.container.appendChild(addInputElement);
	    this.domElements.addInputElement = addInputElement;
	
	    // Create inputs list
	    var inputList = document.createElement("div");
	    inputList.classList.add("nodeInputList");
	    this.domElements.container.appendChild(inputList);
	    this.domElements.inputList = inputList;
	
	    // Set title
	    this.name = name;
	  }
	
	  _createClass(NodeInputGroup, [{
	    key: "updateTitle",
	    value: function updateTitle() {
	      this.domElements["container"].setAttribute("title", this._name);
	    }
	  }, {
	    key: "addInput",
	    value: function addInput(name) {
	      var input = new _NodeInput2.default(name);
	      this.inputs.push(input);
	      this.domElements.inputList.appendChild(input.domElement);
	
	      return input;
	    }
	  }, {
	    key: "handleAddInputButtonClick",
	    value: function handleAddInputButtonClick(e) {
	      e.preventDefault();
	
	      this.addInput("New Input");
	    }
	  }, {
	    key: "name",
	    get: function get() {
	      return this._name;
	    },
	    set: function set(value) {
	      this._name = value;
	      this.updateTitle();
	    }
	  }]);
	
	  return NodeInputGroup;
	}();
	
	exports.default = NodeInputGroup;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Node2 = __webpack_require__(1);
	
	var _Node3 = _interopRequireDefault(_Node2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ModelNode = function (_Node) {
	  _inherits(ModelNode, _Node);
	
	  function ModelNode(name) {
	    _classCallCheck(this, ModelNode);
	
	    var _this = _possibleConstructorReturn(this, (ModelNode.__proto__ || Object.getPrototypeOf(ModelNode)).call(this, name));
	
	    _this.addInputGroup("Properties");
	    return _this;
	  }
	
	  return ModelNode;
	}(_Node3.default);
	
	exports.default = ModelNode;

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Node2 = __webpack_require__(1);
	
	var _Node3 = _interopRequireDefault(_Node2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ControllerNode = function (_Node) {
	  _inherits(ControllerNode, _Node);
	
	  function ControllerNode(name) {
	    _classCallCheck(this, ControllerNode);
	
	    var _this = _possibleConstructorReturn(this, (ControllerNode.__proto__ || Object.getPrototypeOf(ControllerNode)).call(this, name));
	
	    _this.addInputGroup("Models");
	    return _this;
	  }
	
	  return ControllerNode;
	}(_Node3.default);
	
	exports.default = ControllerNode;

/***/ }
/******/ ]);
//# sourceMappingURL=build.min.js.map